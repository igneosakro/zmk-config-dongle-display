/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/led/led.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/reset.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10

#define LETTERS 0
#define NUMBERS 1
#define FUNCTION 2
#define SPECIAL 3
#define MOUSE 4
#define GAME 5
#define FGC 6

#define KEY_TAB 0
#define KEY_T 5
#define KEY_LSHIFT 12
#define KEY_G 17
#define KEY_H 18
#define KEY_TILDE 23
#define KEY_RSHIFT 23
#define KEY_WIN 36
#define KEY_LALT 37
#define KEY_SPACE 38
#define KEY_ENTER 39
#define KEY_RALT 40
#define KEY_DEL 41

&mt {
    tapping-term-ms = <200>;
};

&lt {
    tapping-term-ms = <200>;
};

/ {
        behaviors {
            mt: mod_tap {
                compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                flavor = "balanced";
                tapping-term-ms = <200>;
                bindings = <&kp>, <&kp>;
                display-name = "Mod-Tap";
            };
        };

        combos {
                compatible = "zmk,combos";
                combo_mo_mouse {
                    timeout-ms = <50>;
                    key-positions = <KEY_LALT KEY_SPACE>;
                    slow-release;
                    bindings = <&mo MOUSE>;
                    layers = <LETTERS>;
                };
                combo_to_mouse {
                    timeout-ms = <50>;
                    key-positions = <KEY_ENTER KEY_RALT KEY_DEL>;
                    bindings = <&to MOUSE>;
                    layers = <LETTERS>;
                };
                combo_to_game {
                    timeout-ms = <50>;
                    key-positions = <KEY_WIN KEY_LALT KEY_SPACE>;
                    bindings = <&to GAME>;
                    layers = <LETTERS>;
                };
                combo_to_fgc {
                    timeout-ms = <50>;
                    key-positions = <KEY_ENTER KEY_RALT KEY_DEL KEY_WIN KEY_LALT KEY_SPACE>;
                    bindings = <&to FGC>;
                    layers = <LETTERS>;
                };
                combo_to_letters {
                    timeout-ms = <50>;
                    key-positions = <KEY_WIN KEY_LALT KEY_SPACE>;
                    bindings = <&to LETTERS>;
                    layers = <MOUSE GAME FGC>;
                };
                combo_to_letters_alt {
                    timeout-ms = <50>;
                    key-positions = <KEY_ENTER KEY_RALT KEY_DEL>;
                    bindings = <&to LETTERS>;
                    layers = <MOUSE GAME FGC>;
                };
                combo_caps_word {
                    timeout-ms = <50>;
                    key-positions = <KEY_LSHIFT KEY_RSHIFT>;
                    bindings = <&caps_word>;
                    layers = <LETTERS>;
                };
                combo_caps {
                    timeout-ms = <50>;
                    key-positions = <KEY_LSHIFT KEY_LALT>;
                    bindings = <&kp CAPS>;
                    layers = <LETTERS>;
                };
                combo_bt_clr {
                    timeout-ms = <100>;
                    key-positions = <KEY_H KEY_TILDE>;
                    bindings = <&bt BT_CLR>;
                    layers = <FUNCTION>;
                };
        };

        
        conditional_layers {
            compatible = "zmk,conditional-layers";
            tri_layer {
                if-layers = <NUMBERS FUNCTION>;
                then-layer = <SPECIAL>;
            };
        };

        keymap {
                compatible = "zmk,keymap";

                letters {
                        display-name = "Letters";
                        bindings = <
   &kp TAB             &kp Q               &kp W               &kp E               &kp R               &kp T                                   &kp Y               &kp U               &kp I               &kp O               &kp P               &kp BSPC
   &kp LSHIFT          &kp A               &kp S               &kp D               &kp F               &kp G                                   &kp H               &kp J               &kp K               &kp L               &kp SEMI            &mt RSHIFT SQT
   &kp LCTRL           &kp Z               &kp X               &kp C               &kp V               &kp B                                   &kp N               &kp M               &kp COMMA           &kp DOT             &kp FSLH            &kp RCTRL
                                                               &kp LGUI            &kp LALT            &lt NUMBERS SPACE                       &lt FUNCTION RET    &kp RALT            &kp DEL
                        >;
                };

                numbers {
                        display-name = "Numbers";
                        bindings = <
   &kp ESC             &kp N1              &kp N2              &kp N3              &kp N4              &kp N5                                  &kp KP_SLASH        &kp KP_N7           &kp KP_N8           &kp KP_N9           &kp KP_MINUS        &kp BSPC
   &kp LSHIFT          &kp N6              &kp N7              &kp N8              &kp N9              &kp N0                                  &kp KP_ASTERISK     &kp KP_N4           &kp KP_N5           &kp KP_N6           &kp KP_PLUS         &mt RSHIFT KP_NUMLOCK
   &kp LCTRL           &kp F1              &kp F2              &kp F3              &kp F4              &kp F5                                  &kp KP_N0           &kp KP_N1           &kp KP_N2           &kp KP_N3           &kp KP_DOT          &kp RCTRL
                                                               &trans              &trans              &trans                                  &trans              &trans              &trans
                        >;
                };

                function {
                        display-name = "Function";
                        bindings = <
   &kp ESC             &kp F1              &kp F2              &kp F3              &kp F4              &bt BT_PRV                              &kp INS             &kp HOME            &kp UP              &kp END              &kp PG_UP           &kp BSPC
   &kp LSHIFT          &kp F5              &kp F6              &kp F7              &kp F8              &bt BT_NXT                              &kp PAUSE_BREAK     &kp LEFT            &kp DOWN            &kp RIGHT            &kp PG_DN           &mt RSHIFT C_AL_CALC
   &kp LCTRL           &kp F9              &kp F10             &kp F11             &kp F12             &out OUT_TOG                            &kp PSCRN           &kp C_PP            &kp C_MUTE          &kp C_VOL_DN         &kp C_VOL_UP        &kp RCTRL
                                                               &trans              &trans              &trans                                  &trans              &trans              &trans
                        >;
                };

                special {
                        display-name = "Special";
                        bindings = <
   &kp RA(GRAVE)       &kp MINUS           &kp RS(N2)          &kp LS(EQUAL)       &kp LS(MINUS)       &kp RA(N2)                              &kp RS(N4)          &kp GRAVE           &kp RS(GRAVE)       &kp LBKT            &kp SQT             &kp BSPC
   &kp RA(N1)          &kp RA(LBKT)        &kp RA(RBKT)        &kp LS(N8)          &kp LS(N9)          &kp LS(N6)                              &kp RS(N5)          &kp LS(N0)          &kp LS(LBKT)        &kp RA(N4)          &kp RA(N6)          &kp LS(NUHS)
   &kp LS(N7)          &kp RA(SQT)         &kp RA(NUHS)        &kp EQUAL           &kp RS(N1)          &kp RA(N3)                              &kp RA(E)           &kp NUBS            &kp RS(NUBS)        &kp RS(N3)          &kp LS(SQT)         &kp NUHS
                                                               &trans              &trans              &trans                                  &trans              &trans              &trans
                        >;
                };

                mouse {
                        display-name = "Mouse";
                        bindings = <
   &kp ESC             &kp CAPS            &kp Q               &kp W               &kp E               &kp R                                   &msc SCRL_UP        &msc SCRL_LEFT      &mmv MOVE_UP        &msc SCRL_RIGHT     &msc SCRL_UP        &kp BSPC
   &kp TAB             &kp LSHFT           &kp A               &kp S               &kp D               &kp F                                   &msc SCRL_DOWN      &mmv MOVE_LEFT      &mmv MOVE_DOWN      &mmv MOVE_RIGHT     &msc SCRL_DOWN      &kp RSHFT
   &kp LCTRL           &kp N1              &kp N2              &kp N3              &kp N4              &kp N5                                  &none               &none               &none               &none               &none               &kp RCTRL
                                                               &kp G               &kp LALT            &kp SPACE                               &mkp MB1            &mkp MB3            &mkp MB2
                        >;
                };

                game {
                        display-name = "Game";
                        bindings = <
   &kp ESC             &kp CAPS            &kp Q               &kp W               &kp E               &kp R                                   &kp GRAVE           &none               &kp UP              &none               &none               &kp BSPC
   &kp TAB             &kp LSHIFT          &kp A               &kp S               &kp D               &kp F                                   &none               &kp LEFT            &kp DOWN            &kp RIGHT           &none               &none
   &kp LCTRL           &kp N1              &kp N2              &kp N3              &kp N4              &kp N5                                  &none               &none               &none               &none               &none               &kp RET
                                                               &kp G               &kp LALT            &kp SPACE                               &kp RET             &kp RALT            &kp RGUI
                        >;
                };

                fgc {
                        display-name = "FGC";
                        bindings = <
   &kp ESC             &kp GRAVE           &kp Q               &kp W               &kp E               &kp R                                   &kp T               &kp Y               &kp U               &kp I               &kp O               &kp P
   &kp TAB             &kp LSHFT           &kp A               &kp S               &kp D               &kp F                                   &kp G               &kp H               &kp J               &kp K               &kp L               &kp SEMI
   &kp LCTRL           &kp N1              &kp N2              &kp N3              &kp N4              &kp N5                                  &kp B               &kp N               &kp M               &kp COMMA           &kp DOT             &kp RET
                                                               &kp G               &kp LALT            &kp SPACE                               &kp RSHFT           &mkp MB1            &kp RGUI
                        >;
                };
        };
};
